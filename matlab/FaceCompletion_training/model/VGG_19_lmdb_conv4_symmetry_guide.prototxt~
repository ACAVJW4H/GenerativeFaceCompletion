name: "VGG_ILSVRC_19_layers"
input: "data_input"
input_dim: 8
input_dim: 6
input_dim: 64
input_dim: 64

###################
layer {
  name: "slice_data"
  type: "Slice"
  bottom: "data_input"
  top: "data"
  top: "data_content"
  slice_param {
     axis: 1
     slice_point: 3
  }
}

layer {
  bottom: "data_content"
  top: "conv1_1_content"
  name: "conv1_1_content"
  type: "Convolution"
  param { 
    name: "conv1_1_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1_content"
  top: "conv1_1_content"
  name: "relu1_1_content"
  type: "ReLU"
}
layer {
  bottom: "conv1_1_content"
  top: "conv1_2_content"
  name: "conv1_2_content"
  type: "Convolution"
  param { 
    name: "conv1_2_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2_content"
  top: "conv1_2_content"
  name: "relu1_2_content"
  type: "ReLU"
}
layer {
  bottom: "conv1_2_content"
  top: "pool1_content"
  #top: "pool1_mask_content"
  name: "pool1_content"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool1_content"
  top: "conv2_1_content"
  name: "conv2_1_content"
  type: "Convolution"
  param { 
    name: "conv2_1_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1_content"
  top: "conv2_1_content"
  name: "relu2_1_content"
  type: "ReLU"
}
layer {
  bottom: "conv2_1_content"
  top: "conv2_2_content"
  name: "conv2_2_content"
  type: "Convolution"
  param { 
    name: "conv2_2_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2_content"
  top: "conv2_2_content"
  name: "relu2_2_content"
  type: "ReLU"
}
layer {
  bottom: "conv2_2_content"
  top: "pool2_content"
  #top: "pool2_mask_content"
  name: "pool2_content"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}

layer {
  bottom: "pool2_content"
  top: "conv3_1_content"
  name: "conv3_1_content"
  type: "Convolution"
  param { 
    name: "conv3_1_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1_content"
  top: "conv3_1_content"
  name: "relu3_1_content"
  type: "ReLU"
}
layer {
  bottom: "conv3_1_content"
  top: "conv3_2_content"
  name: "conv3_2_content"
  type: "Convolution" 
  param { 
    name: "conv3_2_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2_content"
  top: "conv3_2_content"
  name: "relu3_2_content"
  type: "ReLU"
}
layer {
  bottom: "conv3_2_content"
  top: "conv3_3_content"
  name: "conv3_3_content"
  type: "Convolution"
  param { 
    name: "conv3_3_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3_content"
  top: "conv3_3_content"
  name: "relu3_3_content"
  type: "ReLU"
}
layer {
  bottom: "conv3_3_content"
  top: "conv3_4_content"
  name: "conv3_4_content"
  type: "Convolution"
  param { 
    name: "conv3_4_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_4_content"
  top: "conv3_4_content"
  name: "relu3_4_content"
  type: "ReLU"
}
layer {
  bottom: "conv3_4_content"
  top: "pool3_content"
  #top: "pool3_mask_content"
  name: "pool3_content"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3_content"
  top: "conv4_1_content"
  name: "conv4_1_content"
  type: "Convolution"
  param { 
    name: "conv4_1_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1_content"
  top: "conv4_1_content"
  name: "relu4_1_content"
  type: "ReLU"
}
layer {
  bottom: "conv4_1_content"
  top: "conv4_2_content"
  name: "conv4_2_content"
  type: "Convolution"
  param { 
    name: "conv4_2_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2_content"
  top: "conv4_2_content"
  name: "relu4_2_content"
  type: "ReLU"
}
layer {
  bottom: "conv4_2_content"
  top: "conv4_3_content"
  name: "conv4_3_content"
  type: "Convolution"
  param { 
    name: "conv4_3_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3_content"
  top: "conv4_3_content"
  name: "relu4_3_content"
  type: "ReLU"
}
layer {
  bottom: "conv4_3_content"
  top: "conv4_4_content"
  name: "conv4_4_content"
  type: "Convolution"
  param { 
    name: "conv4_4_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_4_content"
  top: "conv4_4_content"
  name: "relu4_4_content"
  type: "ReLU"
}
layer {
  bottom: "conv4_4_content"
  top: "pool4_content"
  #top: "pool4_mask_content"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "silence"
  type: "Silence"
  bottom: "pool4_content"
}

######
layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  param { 
    name: "conv1_1_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param { 
    name: "conv1_2_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  top: "pool1_mask"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  param { 
    name: "conv2_1_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  param { 
    name: "conv2_2_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  top: "pool2_mask"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  param { 
    name: "conv3_1_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution" 
  param { 
    name: "conv3_2_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  param { 
    name: "conv3_3_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "conv3_4"
  name: "conv3_4"
  type: "Convolution"
  param { 
    name: "conv3_4_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_4"
  top: "conv3_4"
  name: "relu3_4"
  type: "ReLU"
}
layer {
  bottom: "conv3_4"
  top: "pool3"
  top: "pool3_mask"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  param { 
    name: "conv4_1_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  param { 
    name: "conv4_2_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  param { 
    name: "conv4_3_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "conv4_4"
  name: "conv4_4"
  type: "Convolution"
  param { 
    name: "conv4_4_yijun"
    lr_mult: 0
    decay_mult: 0
  }
  param { 
    lr_mult: 0 
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_4"
  top: "conv4_4"
  name: "relu4_4"
  type: "ReLU"
}
layer {
  bottom: "conv4_4"
  top: "pool4"
  top: "pool4_mask"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
##
layer {
  name: "upsample4"
  type: "Upsample"
  bottom: "pool4"
  bottom: "pool4_mask"
  top: "upsample4"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode4_4"
  type: "Convolution"
  bottom: "upsample4"
  top: "conv_decode4_4"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode4_4"
  top: "conv_decode4_4"
  name: "de_relu4_4"
  type: "ReLU"
}
layer {
  name: "conv_decode4_3"
  type: "Convolution"
  bottom: "conv_decode4_4"
  top: "conv_decode4_3"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode4_3"
  top: "conv_decode4_3"
  name: "de_relu4_3"
  type: "ReLU"
}
layer {
  name: "conv_decode4_2"
  type: "Convolution"
  bottom: "conv_decode4_3"
  top: "conv_decode4_2"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode4_2"
  top: "conv_decode4_2"
  name: "de_relu4_2"
  type: "ReLU"
}
layer {
  name: "conv_decode4_1"
  type: "Convolution"
  bottom: "conv_decode4_2"
  top: "conv_decode4_1"
  convolution_param {
    num_output: 256
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode4_1"
  top: "conv_decode4_1"
  loss_weight: 1.0
  name: "de_relu4_1"
  type: "ReLU"
}
##
layer {
  name: "upsample3"
  type: "Upsample"
  bottom: "conv_decode4_1"
  bottom: "pool3_mask"
  top: "upsample3"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode3_4"
  type: "Convolution"
  bottom: "upsample3"
  top: "conv_decode3_4"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode3_4"
  top: "conv_decode3_4"
  name: "de_relu3_4"
  type: "ReLU"
}
layer {
  name: "conv_decode3_3"
  type: "Convolution"
  bottom: "conv_decode3_4"
  top: "conv_decode3_3"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode3_3"
  top: "conv_decode3_3"
  name: "de_relu3_3"
  type: "ReLU"
}
layer {
  name: "conv_decode3_2"
  type: "Convolution"
  bottom: "conv_decode3_3"
  top: "conv_decode3_2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode3_2"
  top: "conv_decode3_2"
  name: "de_relu3_2"
  type: "ReLU"
}
layer {
  name: "conv_decode3_1"
  type: "Convolution"
  bottom: "conv_decode3_2"
  top: "conv_decode3_1"
  convolution_param {
    num_output: 128
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode3_1"
  top: "conv_decode3_1"
  loss_weight: 1.0
  name: "de_relu3_1"
  type: "ReLU"
}
##
layer {
  name: "upsample2"
  type: "Upsample"
  bottom: "conv_decode3_1"
  bottom: "pool2_mask"
  top: "upsample2"
  upsample_param {
    scale: 2
  }
}
layer {
  name: "conv_decode2_2"
  type: "Convolution"
  bottom: "upsample2"
  top: "conv_decode2_2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode2_2"
  top: "conv_decode2_2"
  name: "de_relu2_2"
  type: "ReLU"
}
layer {
  name: "conv_decode2_1"
  type: "Convolution"
  bottom: "conv_decode2_2"
  top: "conv_decode2_1"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}
layer {
  bottom: "conv_decode2_1"
  top: "conv_decode2_1"
  loss_weight: 1.0
  name: "de_relu2_1"
  type: "ReLU"
}

##
layer {
  name: "upsample1"
  type: "Upsample"
  bottom: "conv_decode2_1"
  bottom: "pool1_mask"
  top: "upsample1"
  upsample_param {
    scale: 2
  }
}

layer {
  name: "conv_decode1_2"
  type: "Convolution"
  bottom: "upsample1"
  top: "conv_decode1_2"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}

layer {
  bottom: "conv_decode1_2"
  top: "conv_decode1_2"
  name: "de_relu1_2"
  type: "ReLU"
}

layer {
  name: "conv_decode1_1"
  type: "Convolution"
  bottom: "conv_decode1_2"
  top: "conv_decode1_1"
  convolution_param {
    num_output: 64
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}

layer {
  bottom: "conv_decode1_1"
  top: "conv_decode1_1"
  name: "de_relu1_1"
  type: "ReLU"
}

layer {
  name: "reconstruction"
  type: "Convolution"
  bottom: "conv_decode1_1"
  top: "reconstruction"
  loss_weight: 1.0
  convolution_param {
    num_output: 3
    kernel_size: 3
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.001
      #type: "msra"
      #variance_norm: AVERAGE
    }
    bias_filler {
      type: "constant"
      value: 0
}
}
}






